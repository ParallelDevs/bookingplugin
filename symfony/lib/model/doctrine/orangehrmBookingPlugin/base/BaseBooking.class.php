<?php

/**
 * BaseBooking
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $bookingId
 * @property integer $bookableId
 * @property integer $projectId
 * @property integer $customerId
 * @property datetime $startAT
 * @property datetime $endAt
 * @property smallint $allDay
 * @property clob $availableOn
 * @property BookableResource $BookableResource
 * @property Project $Project
 * @property Customer $Customer
 *
 * @method integer          getBookingId()        Returns the current record's "bookingId" value
 * @method integer          getBookableId()       Returns the current record's "bookableId" value
 * @method integer          getProjectId()        Returns the current record's "projectId" value
 * @method integer          getCustomerId()       Returns the current record's "customerId" value
 * @method datetime         getStartAt()          Returns the current record's "startAt" value
 * @method datetime         getEndAt()            Returns the current record's "endAt" value
 * @method smallint         getAllDay()           Returns the current record's "allDay" value
 * @method clob             getAvailableOn()      Returns the current record's "availableOn" value
 * @method BookableResource getBookableResource() Returns the current record's "BookableResource" value
 * @method Project          getProject()          Returns the current record's "Project" value
 * @method Customer         getCustomer()         Returns the current record's "Customer" value
 * @method Booking          setBookingId()        Sets the current record's "bookingId" value
 * @method Booking          setBookableId()       Sets the current record's "bookableId" value
 * @method Booking          setProjectId()        Sets the current record's "projectId" value
 * @method Booking          setCustomerId()       Sets the current record's "customerId" value
 * @method Booking          setStartAt()          Sets the current record's "startAt" value
 * @method Booking          setEndAt()            Sets the current record's "endAt" value
 * @method Booking          setAllDay()           Sets the current record's "allDay" value
 * @method Booking          setAvailableOn()      Sets the current record's "availableOn" value
 * @method Booking          setBookableResource() Sets the current record's "BookableResource" value
 * @method Booking          setProject()          Sets the current record's "Project" value
 * @method Booking          setCustomer()         Sets the current record's "Customer" value
 *
 * @package    orangehrm
 * @subpackage model\booking\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBooking extends sfDoctrineRecord {

  public function setTableDefinition() {
    $this->setTableName('hs_hr_booking');
    $this->hasColumn('booking_id as bookingId', 'integer', 7, array(
      'type' => 'integer',
      'primary' => true,
      'length' => 7,
    ));
    $this->hasColumn('bookable_id as bookableId', 'integer', 7, array(
      'type' => 'integer',
      'notnull' => true,
      'length' => 7,
    ));
    $this->hasColumn('project_id as projectId', 'integer', null, array(
      'type' => 'integer',
      'notnull' => true,
    ));
    $this->hasColumn('customer_id as customerId', 'integer', 4, array(
      'type' => 'integer',
      'notnull' => true,
      'length' => 4,
    ));
    $this->hasColumn('start_at as startAT', 'datetime', null, array(
      'type' => 'datetime',
      'notnull' => true,
    ));
    $this->hasColumn('end_at as endAt', 'datetime', null, array(
      'type' => 'datetime',
      'notnull' => true,
    ));
    $this->hasColumn('all_day as allDay', 'smallint', null, array(
      'type' => 'smallint',
      'notnull' => true,
    ));
    $this->hasColumn('available_on as availableOn', 'clob', null, array(
      'type' => 'clob',
      'notnull' => true,
    ));
  }

  public function setUp() {
    parent::setUp();
    $this->hasOne('BookableResource', array(
      'local' => 'bookableId',
      'foreign' => 'bookable_id'));

    $this->hasOne('Project', array(
      'local' => 'projectId',
      'foreign' => 'project_id'));

    $this->hasOne('Customer', array(
      'local' => 'customerId',
      'foreign' => 'customer_id'));
  }

}
