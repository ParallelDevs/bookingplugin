<?php

/**
 * BaseBooking
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $bookingId
 * @property integer $bookableId
 * @property integer $customerId
 * @property integer $projectId
 * @property integer $duration
 * @property date $startDate
 * @property date $endDate
 * @property time $startTime
 * @property time $endTime
 * @property clob $availableOn
 * @property BookableResource $BookableResource
 * @property Customer $Customer
 * @property Project $Project
 * 
 * @method integer          get()                 Returns the current record's "bookingId" value
 * @method integer          get()                 Returns the current record's "bookableId" value
 * @method integer          get()                 Returns the current record's "customerId" value
 * @method integer          get()                 Returns the current record's "projectId" value
 * @method integer          get()                 Returns the current record's "duration" value
 * @method date             get()                 Returns the current record's "startDate" value
 * @method date             get()                 Returns the current record's "endDate" value
 * @method time             get()                 Returns the current record's "startTime" value
 * @method time             get()                 Returns the current record's "endTime" value
 * @method clob             get()                 Returns the current record's "availableOn" value
 * @method BookableResource get()                 Returns the current record's "BookableResource" value
 * @method Customer         get()                 Returns the current record's "Customer" value
 * @method Project          get()                 Returns the current record's "Project" value
 * @method Booking          set()                 Sets the current record's "bookingId" value
 * @method Booking          set()                 Sets the current record's "bookableId" value
 * @method Booking          set()                 Sets the current record's "customerId" value
 * @method Booking          set()                 Sets the current record's "projectId" value
 * @method Booking          set()                 Sets the current record's "duration" value
 * @method Booking          set()                 Sets the current record's "startDate" value
 * @method Booking          set()                 Sets the current record's "endDate" value
 * @method Booking          set()                 Sets the current record's "startTime" value
 * @method Booking          set()                 Sets the current record's "endTime" value
 * @method Booking          set()                 Sets the current record's "availableOn" value
 * @method Booking          set()                 Sets the current record's "BookableResource" value
 * @method Booking          set()                 Sets the current record's "Customer" value
 * @method Booking          set()                 Sets the current record's "Project" value
 * 
 * @package    orangehrm
 * @subpackage model\booking\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBooking extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('hs_hr_booking');
        $this->hasColumn('booking_id as bookingId', 'integer', 7, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 7,
             ));
        $this->hasColumn('bookable_id as bookableId', 'integer', 7, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 7,
             ));
        $this->hasColumn('customer_id as customerId', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('project_id as projectId', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('duration as duration', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('start_date as startDate', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('end_date as endDate', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('start_time as startTime', 'time', null, array(
             'type' => 'time',
             'notnull' => false,
             ));
        $this->hasColumn('end_time as endTime', 'time', null, array(
             'type' => 'time',
             'notnull' => false,
             ));
        $this->hasColumn('available_on as availableOn', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BookableResource', array(
             'local' => 'bookableId',
             'foreign' => 'bookable_id'));

        $this->hasOne('Customer', array(
             'local' => 'customerId',
             'foreign' => 'customer_id'));

        $this->hasOne('Project', array(
             'local' => 'projectId',
             'foreign' => 'project_id'));
    }
}